Hacking Budgie Desktop
----------------------

Indentation is strictly 8 spaces (set tab stops to 8 spaces) - No tabs
No spaces between function name and parentheses. Only use space after
`if (`, etc.

Curly braces must be on the same line (i.e. expressions) unless it
is the function declaration:

**Acceptable**

        int main(int argc, char **argv)
        {
                if (someThingOrOther) {
                        // Do something
                }
                return 0;
        }

**Unacceptable**

        int main(int argc, char **argv) {

                if(someThingOrOther)
                {
                        // Do something
                }
                return 0;
        }

When appropriate remember to declare your function first! It helps when
looking back through the file.

Use consistent pointers! `*` should prefix your variable name. Also ensure
your pointers (where appropriate) are not left uninitialized, resulting
in broken `g_free()` calls.

**Acceptable**

        char **something = NULL;
        doFunc(&something);

**Unacceptable**

        char** something;
        doFunc(&someThing);

When dealing with allocated memory, that can be free'd using `g_free`,
ensure you use the `autofree` define. This will massively reduce the
possibility of forgetful memory leaks. When using `autofree`, do *not*
call `g_free` whatsoever, it will automatically be free'd for you!

        autofree gchar *txt = NULL;

Minimise your use of `goto`'s, and test every code path is reached. Also
ensure *every* if/else, etc, even if single line, is wrapped in curly braces.
